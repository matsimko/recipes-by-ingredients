@startuml
hide circle
skinparam classAttributeIconSize 0
left to right direction
    IRecipeService <|. RecipeService
    IManagedTransaction <|. ManagedTransaction
    IManagedTransactionFactory <|. ManagedTransactionFactory
    IRecipeDaoFactory <|. RecipeDaoFactory

    RecipeDaoFactory ..> RecipeDao : instantiate
    ManagedTransactionFactory ..> ManagedTransaction : instantiate
    IManagedTransactionFactory ..> IManagedTransaction : instantiate
    RecipeService --> IRecipeDaoFactory
    RecipeService -> IManagedTransactionFactory
    RecipeController --> IRecipeService

    ITagService <|. TagService
    ITagDaoFactory <|. TagDaoFactory
    TagDaoFactory ..> TagDao : instantiate
    TagService --> ITagDaoFactory
    IManagedTransactionFactory <- TagService
    TagController --> ITagService

    class RecipeDao{
        +Insert(recipe)
        +AddTagToRecipe(tag, recipeId)
        +AddInstructionToRecipe(instruction, recipeId)
        +RemoveTagFromRecipe(tagId, recipeId)
        +RemoveInstructionFromRecipe(instructionId, recipeId)
        +Update(recipe)
        +Delete(id)
        +GetRecipe(id)
        +GetRecipeDetail(id)
        +SearchRecipes(recipeSearch)
    }

    class RecipeDaoFactory{
    }

    class IRecipeDaoFactory{
        +Create(managedTransaction)
    }

    class ManagedTransaction{
    }

    class ManagedTransactionFactory{
        -configuration
    }

    class IManagedTransaction{
        +Connection
        +Transaction
        +Commit()
        +Dispose()
    }

    class IManagedTransactionFactory{
        +Create()
    }

    class RecipeService {

    }

    class IRecipeService{
        +Insert(recipe, userId)
        +AddTagToRecipe(tag, recipeId, userId)
        +AddIngredientToRecipe(ingredient, recipeId, userId);
        +AddInstructionToRecipe(instruction, recipeId, userId)
        +RemoveTagFromRecipe(tagId, recipeId, userId)
        +RemoveIngredientFromRecipe(ingredientId, recipeId, userId)
        +RemoveInstructionFromRecipe(instructionId, recipeId, userId)
        +Update(recipe, userId)
        +Delete(id, userId)
        +GetRecipeDetail(id, userId?)
        +SearchRecipes(recipeSearch, userId?)
    }

    class RecipeController{
        -GetCurrentUserId()
        +Get(recipeSearch?)
        +Get(id)
        +Post(creationDto)
        +AddTagToRecipe(id, name)
        +AddIngredientToRecipe(id, creationDto)
        +AddInstructionToRecipe(id, dto)
        +Put(id, creationDto)
        +Delete(id)
        +RemoveTagFromRecipe(id, tagId)
        +RemoveIngredientFromRecipe(id, ingredientId)
        +RemoveInstructionFromRecipe(id, instructionId)
    }



    class TagDao{
        +SearchTags(prefix)
    }

    class TagDaoFactory{
    }

    class ITagDaoFactory{
        +Create(managedTransaction)
    }

    class ITagService{
        +SearchTags(prefix)
    }

    class TagService{
    }

    class TagController{
        +Get(prefix)
    }

@enduml